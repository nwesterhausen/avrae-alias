embed
<drac2>
## Make sure to set the user variable "charname" to have it say your name!
if not uvar_exists("charname"):
    charname = "You"

# Reference Lists
cb_descriptions = [
    "turns into acid, coating the target",
    "embeds into the target before melting while freezing the affected area",
    "ignites into a hot wreath of fire",
    "collides with the target as if solid",
    "strikes the target as a lightning bolt",
    "turns into poison, splashing the target",
    "dissipates into tendrils of brilliant purple arcs crisscrossing the target",
    "explodes in a loud boom"
]
cb_types = [
    "acid","cold","fire","force","lightning","poison","psychic","thunder"
]
cb_colors = [
    "#76FF03","#18FFFF","#E64A19","#90CAF9","#EEFF41","#66BB6A","#9C27B0","#A1887F"
]

# Handling Advantage/Disadvantage on rolls
args = &ARGS&
a = ''
d = 1
if args:
    a = args[0]
    d = 2
if a == 'a':
    a = 'kh1'
elif a == 'd':
    a = 'kl1'
attackMod = 4
attackRoll = vroll(d +"d20"+ a + '+' + str(attackMod))

# Since the d8 values matter in deciding damage type, we roll each die
d81 = roll("d8")
d82 = roll("d8")
d61 = roll("d6")

# Randomly choose a d8 roll to use to decide damage type
typei = randchoice([d81,d82]) - 1

# Assign text descriptors for the damage types
dtype = cb_types[typei]
desc2 = cb_descriptions[typei]
color = cb_colors[typei]

# Add up total damage
dmgt = d81+d82+d61

# Build damage text
dmgtxt = f"2d8 ({d81}, {d82}) + 1d6 ({d61}) = `{dmgt}` `{dtype}` damage, the bolt {desc2}"

# If both d8s match, on a hit the bolt spawn a new bolt
extraeff = ""
if d81 == d82:
    extraeff = '\n'+'\n'+"**Chaotic Spellcasting:**"+'\n'+'\n'+"If this bolt hits the target, a new chaos bolt spawns at the target and flies towards a new target in range of the first! (This cannot rebound back and forth, or hit the same target more than once from one casting.)"
</drac2>

-title "{{charname}} casts Chaos Bolt"
-desc "A bolt of chaotic energy flies towards the target! {{extraeff}}"
-f "Attack roll|{{attackRoll}}"
-f "Damage roll|{{dmgtxt}}!"
--color "{{color}}"
